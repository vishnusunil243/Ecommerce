// Code generated by MockGen. DO NOT EDIT.
// Source: internal/usecase/interface/wallet.go

// Package mock_interfaces is a generated GoMock package.
package mock_interfaces

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	helperStruct "main.go/internal/common/helperStruct"
	response "main.go/internal/common/response"
)

// MockWalletUseCase is a mock of WalletUseCase interface.
type MockWalletUseCase struct {
	ctrl     *gomock.Controller
	recorder *MockWalletUseCaseMockRecorder
}

// MockWalletUseCaseMockRecorder is the mock recorder for MockWalletUseCase.
type MockWalletUseCaseMockRecorder struct {
	mock *MockWalletUseCase
}

// NewMockWalletUseCase creates a new mock instance.
func NewMockWalletUseCase(ctrl *gomock.Controller) *MockWalletUseCase {
	mock := &MockWalletUseCase{ctrl: ctrl}
	mock.recorder = &MockWalletUseCaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWalletUseCase) EXPECT() *MockWalletUseCaseMockRecorder {
	return m.recorder
}

// CreateWallet mocks base method.
func (m *MockWalletUseCase) CreateWallet(userId int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateWallet", userId)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateWallet indicates an expected call of CreateWallet.
func (mr *MockWalletUseCaseMockRecorder) CreateWallet(userId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateWallet", reflect.TypeOf((*MockWalletUseCase)(nil).CreateWallet), userId)
}

// DisplayWallet mocks base method.
func (m *MockWalletUseCase) DisplayWallet(userId int) (response.Wallet, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DisplayWallet", userId)
	ret0, _ := ret[0].(response.Wallet)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DisplayWallet indicates an expected call of DisplayWallet.
func (mr *MockWalletUseCaseMockRecorder) DisplayWallet(userId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DisplayWallet", reflect.TypeOf((*MockWalletUseCase)(nil).DisplayWallet), userId)
}

// WalletHistory mocks base method.
func (m *MockWalletUseCase) WalletHistory(userId int, queryParams helperStruct.QueryParams) ([]response.WalletHistories, int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WalletHistory", userId, queryParams)
	ret0, _ := ret[0].([]response.WalletHistories)
	ret1, _ := ret[1].(int)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// WalletHistory indicates an expected call of WalletHistory.
func (mr *MockWalletUseCaseMockRecorder) WalletHistory(userId, queryParams interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WalletHistory", reflect.TypeOf((*MockWalletUseCase)(nil).WalletHistory), userId, queryParams)
}
